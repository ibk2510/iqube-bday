{"version":3,"sources":["components/bday.js","App.js","index.js"],"names":["Bday","props","state","name","email","dob","addedSuccess","handleChange","bind","addedData","e","this","requestOptions","method","headers","body","JSON","stringify","fetch","response","json","data","console","log","success","setState","swal","icon","title","event","target","id","value","class","className","for","onChange","type","onClick","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8RAgHeA,G,wDA3Gb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,KAAM,GACNC,MAAO,GACPC,IAAK,GACLC,cAAc,GAEhB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,UAAY,EAAKA,UAAUD,KAAf,gBATA,E,+FAWHE,G,wFACRP,EAAOQ,KAAKT,MAAMC,KAClBC,EAAQO,KAAKT,MAAME,MACnBC,EAAMM,KAAKT,MAAMG,IAEjBO,EAAiB,CACrBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBd,KAAMA,EACNC,MAAOA,EACPC,IAAKA,K,SAGca,MAAM,IAAKN,G,cAA5BO,E,gBACaA,EAASC,O,OAAtBC,E,OACNC,QAAQC,IAAIF,GACRA,EAAKG,UACPb,KAAKc,SAAS,CACVtB,KAAM,GACNC,MAAO,GACPC,IAAK,GACLC,cAAc,IAElBoB,IAAK,CACHC,KAAM,UACNC,MAAO,gB,2IAKAC,GACXlB,KAAKc,SAAL,eACGI,EAAMC,OAAOC,GAAKF,EAAMC,OAAOE,QAElCV,QAAQC,IAAIM,EAAMC,OAAOE,S,+BAGzB,OACE,6BACE,6BACE,yBAAKC,MAAM,kCACT,0BAAMA,MAAM,mBAAZ,WAGJ,yBAAKC,UAAU,aACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,aACb,yBAAKD,MAAM,cACT,2BAAOE,IAAI,QAAX,QACA,2BACEC,SAAUzB,KAAKJ,aACf8B,KAAK,OACLJ,MAAM,eACN9B,KAAK,OACL4B,GAAG,OACHC,MAAOrB,KAAKT,MAAMC,QAGtB,yBAAK8B,MAAM,cACT,2BAAOE,IAAI,SAAX,UACA,2BACEC,SAAUzB,KAAKJ,aACf8B,KAAK,QACLJ,MAAM,eACN9B,KAAK,QACL4B,GAAG,QACHC,MAAOrB,KAAKT,MAAME,SAGtB,yBAAK8B,UAAU,cACb,2BAAOC,IAAI,OAAX,iBACA,2BACEJ,GAAG,MACHK,SAAUzB,KAAKJ,aACf2B,UAAU,eACV/B,KAAK,MACLkC,KAAK,OACLL,MAAOrB,KAAKT,MAAMG,OAGtB,4BACEiC,QAAS3B,KAAKF,UACd4B,KAAK,SACLJ,MAAM,mBAHR,kB,GA7FKM,cCOJC,MARf,WACE,OACE,6BACA,kBAAC,EAAD,QCDJC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.e1d9c8a3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport swal from \"sweetalert\";\nimport \"../App.css\";\n\nclass Bday extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      email: \"\",\n      dob: \"\",\n      addedSuccess: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.addedData = this.addedData.bind(this);\n  }\n  async addedData(e) {\n    const name = this.state.name;\n    const email = this.state.email;\n    const dob = this.state.dob;\n\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        name: name,\n        email: email,\n        dob: dob,\n      }),\n    };\n    const response = await fetch(\"/\", requestOptions);\n    const data = await response.json();\n    console.log(data);\n    if (data.success) {\n      this.setState({\n          name: \"\",\n          email: \"\",\n          dob: \"\",\n          addedSuccess: false,\n        });\n      swal({\n        icon: \"success\",\n        title: \"Submitted!\",\n      })\n      \n    }\n  }\n  handleChange(event) {\n    this.setState({\n      [event.target.id]: event.target.value,\n    });\n    console.log(event.target.value);\n  }\n  render() {\n    return (\n      <div>\n        <div>\n          <nav class=\"navbar navbar-light bg-primary\">\n            <span class=\"navbar-brand h2\">iQube</span>\n          </nav>\n        </div>\n        <div className=\"container\">\n          <div className=\"card shadow\">\n            <div className=\"card-body\">\n              <div class=\"form-group\">\n                <label for=\"name\">Name</label>\n                <input\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  class=\"form-control\"\n                  name=\"name\"\n                  id=\"name\"\n                  value={this.state.name}\n                />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"email\">e-Mail</label>\n                <input\n                  onChange={this.handleChange}\n                  type=\"email\"\n                  class=\"form-control\"\n                  name=\"email\"\n                  id=\"email\"\n                  value={this.state.email}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label for=\"dob\">Date of Birth</label>\n                <input\n                  id=\"dob\"\n                  onChange={this.handleChange}\n                  className=\"form-control\"\n                  name=\"dob\"\n                  type=\"date\"\n                  value={this.state.dob}\n                />\n              </div>\n              <button\n                onClick={this.addedData}\n                type=\"submit\"\n                class=\"btn btn-primary\"\n              >\n                Submit\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Bday;\n","import React from \"react\";\nimport Bday from './components/bday'\n\nfunction App() {\n  return (\n    <div>\n    <Bday />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}